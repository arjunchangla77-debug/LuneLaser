{"ast":null,"code":"import _objectSpread from\"C:/Users/SIQOL-WIN-8/OneDrive - SIQOL/Downloads/Web_app_2.0/web_git/react-invoice-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL=process.env.REACT_APP_API_URL||'/api';class ApiService{constructor(){this.baseURL=API_BASE_URL;}// Helper method to make HTTP requests\nasync makeRequest(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(this.baseURL).concat(endpoint);const defaultOptions={headers:{'Content-Type':'application/json'}};// Add authorization header if token exists\nconst token=localStorage.getItem('authToken');if(token){defaultOptions.headers.Authorization=\"Bearer \".concat(token);}const config=_objectSpread(_objectSpread(_objectSpread({},defaultOptions),options),{},{headers:_objectSpread(_objectSpread({},defaultOptions.headers),options.headers)});try{const response=await fetch(url,config);const data=await response.json();if(!response.ok){throw new Error(data.message||\"HTTP error! status: \".concat(response.status));}return data;}catch(error){console.error('API request failed:',error);throw error;}}// Authentication endpoints\nasync login(credentials){return this.makeRequest('/auth/login',{method:'POST',body:JSON.stringify(credentials)});}async register(userData){return this.makeRequest('/auth/register',{method:'POST',body:JSON.stringify(userData)});}async forgotPassword(email){return this.makeRequest('/auth/forgot-password',{method:'POST',body:JSON.stringify({email})});}async resetPassword(token,newPassword){return this.makeRequest('/auth/reset-password',{method:'POST',body:JSON.stringify({token,newPassword})});}async getProfile(){return this.makeRequest('/auth/profile',{method:'GET'});}async changePassword(currentPassword,newPassword){return this.makeRequest('/auth/change-password',{method:'POST',body:JSON.stringify({currentPassword,newPassword})});}// Health check\nasync healthCheck(){return this.makeRequest('/auth/health',{method:'GET'});}// Token management\nsetAuthToken(token){localStorage.setItem('authToken',token);}getAuthToken(){return localStorage.getItem('authToken');}removeAuthToken(){localStorage.removeItem('authToken');}isAuthenticated(){const token=this.getAuthToken();if(!token)return false;try{// Basic token validation (check if it's not expired)\nconst payload=JSON.parse(atob(token.split('.')[1]));const currentTime=Date.now()/1000;return payload.exp>currentTime;}catch(error){console.error('Token validation error:',error);this.removeAuthToken();return false;}}}const apiService=new ApiService();export default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","makeRequest","endpoint","options","arguments","length","undefined","url","concat","defaultOptions","headers","token","localStorage","getItem","Authorization","config","_objectSpread","response","fetch","data","json","ok","Error","message","status","error","console","login","credentials","method","body","JSON","stringify","register","userData","forgotPassword","email","resetPassword","newPassword","getProfile","changePassword","currentPassword","healthCheck","setAuthToken","setItem","getAuthToken","removeAuthToken","removeItem","isAuthenticated","payload","parse","atob","split","currentTime","Date","now","exp","apiService"],"sources":["C:/Users/SIQOL-WIN-8/OneDrive - SIQOL/Downloads/Web_app_2.0/web_git/react-invoice-app/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.baseURL = API_BASE_URL;\r\n  }\r\n\r\n  // Helper method to make HTTP requests\r\n  async makeRequest(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    \r\n    const defaultOptions = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // Add authorization header if token exists\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      defaultOptions.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    const config = {\r\n      ...defaultOptions,\r\n      ...options,\r\n      headers: {\r\n        ...defaultOptions.headers,\r\n        ...options.headers,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Authentication endpoints\r\n  async login(credentials) {\r\n    return this.makeRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials),\r\n    });\r\n  }\r\n\r\n  async register(userData) {\r\n    return this.makeRequest('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n    });\r\n  }\r\n\r\n  async forgotPassword(email) {\r\n    return this.makeRequest('/auth/forgot-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email }),\r\n    });\r\n  }\r\n\r\n  async resetPassword(token, newPassword) {\r\n    return this.makeRequest('/auth/reset-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ token, newPassword }),\r\n    });\r\n  }\r\n\r\n  async getProfile() {\r\n    return this.makeRequest('/auth/profile', {\r\n      method: 'GET',\r\n    });\r\n  }\r\n\r\n  async changePassword(currentPassword, newPassword) {\r\n    return this.makeRequest('/auth/change-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ currentPassword, newPassword }),\r\n    });\r\n  }\r\n\r\n  // Health check\r\n  async healthCheck() {\r\n    return this.makeRequest('/auth/health', {\r\n      method: 'GET',\r\n    });\r\n  }\r\n\r\n  // Token management\r\n  setAuthToken(token) {\r\n    localStorage.setItem('authToken', token);\r\n  }\r\n\r\n  getAuthToken() {\r\n    return localStorage.getItem('authToken');\r\n  }\r\n\r\n  removeAuthToken() {\r\n    localStorage.removeItem('authToken');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    const token = this.getAuthToken();\r\n    if (!token) return false;\r\n\r\n    try {\r\n      // Basic token validation (check if it's not expired)\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const currentTime = Date.now() / 1000;\r\n      return payload.exp > currentTime;\r\n    } catch (error) {\r\n      console.error('Token validation error:', error);\r\n      this.removeAuthToken();\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nconst apiService = new ApiService();\r\nexport default apiService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}