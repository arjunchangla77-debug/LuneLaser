{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import apiService from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check if user is authenticated on app load\nuseEffect(()=>{const initializeAuth=async()=>{try{if(apiService.isAuthenticated()){const response=await apiService.getProfile();setUser(response.data.user);}}catch(error){console.error('Auth initialization error:',error);apiService.removeAuthToken();}finally{setLoading(false);}};initializeAuth();},[]);const login=async credentials=>{setLoading(true);setError(null);try{const response=await apiService.login({login:credentials.username,// backend expects 'login' field\npassword:credentials.password});const{token,user:userData}=response.data;// Store token and user data\napiService.setAuthToken(token);setUser(userData);return{success:true,user:userData};}catch(error){setError(error.message);return{success:false,error:error.message};}finally{setLoading(false);}};const register=async userData=>{setLoading(true);setError(null);try{const response=await apiService.register(userData);const{token,user:newUser}=response.data;// Store token and user data\napiService.setAuthToken(token);setUser(newUser);return{success:true,user:newUser};}catch(error){setError(error.message);return{success:false,error:error.message};}finally{setLoading(false);}};const forgotPassword=async email=>{setLoading(true);setError(null);try{const response=await apiService.forgotPassword(email);return{success:true,message:response.message};}catch(error){setError(error.message);return{success:false,error:error.message};}finally{setLoading(false);}};const resetPassword=async(token,newPassword)=>{setLoading(true);setError(null);try{const response=await apiService.resetPassword(token,newPassword);return{success:true,message:response.message};}catch(error){setError(error.message);return{success:false,error:error.message};}finally{setLoading(false);}};const changePassword=async(currentPassword,newPassword)=>{setLoading(true);setError(null);try{const response=await apiService.changePassword(currentPassword,newPassword);return{success:true,message:response.message};}catch(error){setError(error.message);return{success:false,error:error.message};}finally{setLoading(false);}};const logout=()=>{apiService.removeAuthToken();setUser(null);setError(null);};const clearError=()=>{setError(null);};const value={user,loading,error,login,register,forgotPassword,resetPassword,changePassword,logout,clearError,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","initializeAuth","isAuthenticated","response","getProfile","data","console","removeAuthToken","login","credentials","username","password","token","userData","setAuthToken","success","message","register","newUser","forgotPassword","email","resetPassword","newPassword","changePassword","currentPassword","logout","clearError","value","Provider"],"sources":["C:/Users/SIQOL-WIN-8/OneDrive - SIQOL/Downloads/Web_app_2.0/web_git/react-invoice-app/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport apiService from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        if (apiService.isAuthenticated()) {\r\n          const response = await apiService.getProfile();\r\n          setUser(response.data.user);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n        apiService.removeAuthToken();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await apiService.login({\r\n        login: credentials.username, // backend expects 'login' field\r\n        password: credentials.password\r\n      });\r\n\r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token and user data\r\n      apiService.setAuthToken(token);\r\n      setUser(userData);\r\n      \r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await apiService.register(userData);\r\n      const { token, user: newUser } = response.data;\r\n      \r\n      // Store token and user data\r\n      apiService.setAuthToken(token);\r\n      setUser(newUser);\r\n      \r\n      return { success: true, user: newUser };\r\n    } catch (error) {\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await apiService.forgotPassword(email);\r\n      return { success: true, message: response.message };\r\n    } catch (error) {\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, newPassword) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await apiService.resetPassword(token, newPassword);\r\n      return { success: true, message: response.message };\r\n    } catch (error) {\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await apiService.changePassword(currentPassword, newPassword);\r\n      return { success: true, message: response.message };\r\n    } catch (error) {\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    apiService.removeAuthToken();\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    forgotPassword,\r\n    resetPassword,\r\n    changePassword,\r\n    logout,\r\n    clearError,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}